# SPDX-FileCopyrightText: 2022 - 2023 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

name: build and run

on:
  pull_request:
  push:
    branches: [main]

env:
  WORKLOADS: python,numpy,dpnp,sycl,numba_n,numba_np,numba_npr,numba_dpex_k,numba_dpex_n,numba_dpex_p,numba_mlir_k,numba_mlir_n,numba_mlir_p

jobs:
  build_linux:
    name: Builds dpbench and runs the benchmarks
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python: ["3.9", "3.10"]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout dpbench
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python }}
          activate-environment: dpbench-dev

      - name: Conda info
        shell: bash -l {0}
        run: conda info

      - name: Install dpbench dependencies
        shell: bash -l {0}
        run: |
          conda install -c intel tbb dpcpp_linux-64
          conda install numpy numba cython cmake ninja scikit-build pandas
          conda install scipy scikit-learn pybind11 tomli
          conda install -c pkgs/main libgcc-ng">=11.2.0" libstdcxx-ng">=11.2.0" libgomp">=11.2.0"
          conda install -c dppy/label/dev -c intel -c main dpctl numba-dpex dpnp numba-mlir
          pip install alembic
          conda list

      - name: Build dpbench
        shell: bash -l {0}
        run: |
          CC=icx CXX=icpx python setup.py develop -- -Dpybind11_DIR=$(python -m pybind11 --cmakedir) -DDPCTL_MODULE_PATH=$(python -m dpctl --cmakedir)

      - name: Run benchmarks
        shell: bash -l {0}
        run: |
          export OCL_ICD_FILENAMES=libintelocl.so
          export NUMBA_MLIR_GPU_RUNTIME=sycl
          # Turn off numba-dpex autofall back
          export NUMBA_DPEX_FALLBACK_ON_CPU=0
          # Make sure numba-dpex is using native atomics in github CI
          export NUMBA_DPEX_ACTIVATE_ATOMICS_FP_NATIVE=1
          ls $(dirname $(dirname `which icx`))/bin-llvm || exit 1
          export NUMBA_DPEX_LLVM_SPIRV_ROOT=$(dirname $(dirname `which icx`))/bin-llvm

          dpbench -i ${WORKLOADS} run -r2 --no-print-results || exit 1

      - name: Generate report
        shell: bash -l {0}
        run: |
          dpbench -i ${WORKLOADS} report || exit 1
